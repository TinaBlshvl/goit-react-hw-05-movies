{"version":3,"file":"static/js/639.3ec8589f.chunk.js","mappings":"6OAkCA,EA/BoB,SAAC,GAA0B,IAAxBA,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,MAQhC,OACE,0BACE,kBAAMC,OAAO,GAAGC,aAAa,MAAMC,SATpB,SAAAC,GACjBA,EAAEC,iBAEF,IAAML,EAAQI,EAAEE,cAAcC,SAASC,WAAWR,MAClDD,EAAUC,EACX,EAIG,WACE,kBACES,UAAWC,EAAAA,EAAAA,MACXC,WAAS,EACTC,KAAK,OACLC,KAAK,aACLC,aAAcd,KAEhB,mBAAQS,UAAWC,EAAAA,EAAAA,IAASE,KAAK,SAAjC,wBAMP,E,mCCmCD,EAzDc,WAAO,IAAD,EAClB,GAA4BG,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAS,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAEzCC,GAAWC,EAAAA,EAAAA,MAEXC,EAAM,6CAEZC,EAAAA,EAAAA,YAAU,WAAM,wCACd,uFACoB,KAAdL,EADN,kEAI6BM,EAAAA,EAAAA,GAAY,GAAD,OACjCF,GADiC,iBAE1BJ,IACVO,MAAK,SAAAC,GAAG,OAAIA,EAAIC,OAAR,IAPZ,cAIQC,EAJR,OASEd,GAAU,kBACRc,EAAaC,KAAI,kBAAoB,CACnCC,GADe,EAAGA,GAElBC,MAFe,EAAOA,MAAP,GADT,IATZ,kBAeSH,GAfT,4CADc,uBAAC,WAAD,wBAmBdI,EACD,GAAE,CAACd,IAQJ,OACE,iCACE,SAACe,EAAD,CAAarC,UARO,SAAAsC,GAElBjB,EADU,KAAdiB,EACoB,CAAEC,MAAOD,GACT,CAAC,EACtB,EAI4CrC,MAAOqB,KAChD,0BACE,wBACGL,EAAOgB,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACjB,OACE,yBACE,SAAC,KAAD,CAAMK,GAAE,iBAAYN,GAAMO,MAAO,CAAEC,KAAMlB,GAAzC,SACGW,KAFID,EAMZ,UAKV,C,8ECzDKS,EAAU,2CAEVf,EAAW,mCAAG,WAAOgB,GAAP,8FAAYC,EAAZ,+BAAyB,GAAIC,EAA7B,+BAA0C,CAAC,EAA3C,kBAESC,EAAAA,EAAAA,IAAA,UACpBH,EADoB,YACbD,GADa,OACHE,GACpBC,GAJc,cAEVE,EAFU,yBAMTA,EAAWC,MANF,gCAQhBC,QAAQC,MAAR,MARgB,yDAAH,sDAYjBvB,EAAYwB,UAAY,CACtBR,IAAKS,IAAAA,OAAAA,WACLR,WAAYQ,IAAAA,OACZP,WAAYO,IAAAA,QAGd,K,oBCtBA,KAAgB,KAAO,yBAAyB,IAAM,wBAAwB,IAAM,wBAAwB,MAAQ,0B","sources":["components/Search/Search.jsx","pages/Movie.jsx","services/fetch.jsx","webpack://react-homework-template/./src/components/Navigation/Navigation.module.css?4bf2"],"sourcesContent":["import PropTypes from 'prop-types';\nimport css from '../Navigation/Navigation.module.css';\n\nconst SearchMovie = ({ formValue, value }) => {\n  const submitForm = e => {\n    e.preventDefault();\n\n    const value = e.currentTarget.elements.name_movie.value;\n    formValue(value);\n  };\n\n  return (\n    <div>\n      <form action=\"\" autoComplete=\"off\" onSubmit={submitForm}>\n        <input\n          className={css.input}\n          autoFocus\n          type=\"text\"\n          name=\"name_movie\"\n          defaultValue={value}\n        />\n        <button className={css.btn} type=\"submit\">\n          Search\n        </button>\n      </form>\n    </div>\n  );\n};\n\nSearchMovie.propTypes = {\n  formValue: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n\nexport default SearchMovie;\n","import SearchMovie from 'components/Search';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport fetchMovies from 'services/fetch';\n\nconst Movie = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') ?? '';\n\n  const location = useLocation();\n\n  const URL = 'https://api.themoviedb.org/3/search/movie';\n\n  useEffect(() => {\n    async function fetchData() {\n      if (movieName === '') {\n        return;\n      }\n      const currentMovie = await fetchMovies(\n        `${URL}`,\n        `&query=${movieName}`\n      ).then(res => res.results);\n      // console.log(currentMovie);\n      setMovies(() =>\n        currentMovie.map(({ id, title }) => ({\n          id,\n          title,\n        }))\n      );\n      return currentMovie;\n    }\n\n    fetchData();\n  }, [movieName]);\n\n  const submitFormValue = valueForm => {\n    valueForm !== ''\n      ? setSearchParams({ query: valueForm })\n      : setSearchParams({});\n  };\n\n  return (\n    <>\n      <SearchMovie formValue={submitFormValue} value={movieName} />\n      <div>\n        <ul>\n          {movies.map(({ id, title }) => {\n            return (\n              <li key={id}>\n                <Link to={`/movie/${id}`} state={{ from: location }}>\n                  {title}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </>\n  );\n};\n\nexport default Movie;\n","import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst API_KEY = 'api_key=7b264c573728240a6ab06336c75c925f';\n\nconst fetchMovies = async (url, properties = '', controller = {}) => {\n  try {\n    const dataMovies = await axios.get(\n      `${url}?${API_KEY}${properties}`,\n      controller\n    );\n    return dataMovies.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nfetchMovies.propTypes = {\n  url: PropTypes.string.isRequired,\n  properties: PropTypes.string,\n  controller: PropTypes.object,\n};\n\nexport default fetchMovies;\n","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"Navigation_link__13qe6\",\"nav\":\"Navigation_nav__7WdPp\",\"btn\":\"Navigation_btn__lPTmN\",\"input\":\"Navigation_input__xGiD5\"};"],"names":["formValue","value","action","autoComplete","onSubmit","e","preventDefault","currentTarget","elements","name_movie","className","css","autoFocus","type","name","defaultValue","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","movieName","get","location","useLocation","URL","useEffect","fetchMovies","then","res","results","currentMovie","map","id","title","fetchData","Search","valueForm","query","to","state","from","API_KEY","url","properties","controller","axios","dataMovies","data","console","error","propTypes","PropTypes"],"sourceRoot":""}