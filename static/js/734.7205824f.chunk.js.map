{"version":3,"file":"static/js/734.7205824f.chunk.js","mappings":"uQA0CA,EAtCuB,SAAC,GAAsB,IAApBA,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAC9B,OACE,+BACE,4BACE,0BACE,gBACEC,IAAG,UARC,mCAQD,OAAeF,EAAKG,aACvBC,IAAI,eACJC,MAAM,MACNC,OAAO,WAIX,4BACE,wBACgC,IAA7BC,OAAOC,KAAKR,GAAMS,QAAlB,UACIT,EAAKU,eADT,aAC4BV,EAAKW,aAAaC,MAAM,IAAK,GADzD,QAGH,0CAAkBC,KAAKC,MAA0B,GAApBd,EAAKe,cAAlC,QACA,4BACE,qCACA,0BAAOf,GAAQA,EAAKgB,eAEtB,4BACE,kCACCf,YAMZ,EClCD,EAAqC,iCAArC,EAAsF,4BAAtF,EAAgI,0BAAhI,EAAiK,mBCsBjK,EApBuB,WACrB,OACE,iBAAKgB,UAAWC,EAAhB,WACE,cAAGD,UAAWC,EAAd,qCACA,2BACE,eAAID,UAAWC,EAAf,UACE,SAAC,KAAD,CAAMD,UAAWC,EAAUC,GAAG,OAA9B,qBAIF,eAAIF,UAAWC,EAAf,UACE,SAAC,KAAD,CAAMD,UAAWC,EAAUC,GAAG,UAA9B,4BAOT,ECqDD,EAnEqB,WAAO,IAAD,IACzB,GAAwBC,EAAAA,EAAAA,UAAS,CAAC,GAAlC,eAAOpB,EAAP,KAAaqB,EAAb,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOnB,EAAP,KAAeqB,EAAf,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAEFE,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAE9CC,EAAG,6CAAyCR,GAwClD,OAtCAS,EAAAA,EAAAA,YAAU,WAAM,wCAGd,qGAC6BC,EAAAA,EAAAA,GACzBF,GAFJ,eAQuBG,KAPfC,EADR,gEAWEd,EAAQc,GACRb,GAAU,WACR,OAAI,OAACa,QAAD,IAACA,GAAAA,EAAclC,OAGDkC,EAAalC,OAAOmC,QAAO,SAACC,EAAMC,GAClD,OAEKD,EAFEF,EAAalC,OAAOsC,QAAQD,KACjCH,EAAalC,OAAOQ,OAAS,EACtB,UAAM4B,EAAN,YAAcC,EAAME,MACpB,UAAMH,EAAN,YAAcC,EAAME,KAApB,IACV,GAAE,IAPM,EASV,IAvBH,kBAyBSL,GAzBT,4CAHc,sBAiCd,OAjCc,mCA+BdM,GAEO,WAEN,CACF,GAAE,CAACV,KAGF,2BACGxB,OAAOC,KAAKR,GAAMS,OAAS,IAC1B,iCACE,SAAC,KAAD,CAAMU,GAAIQ,EAAae,QAAvB,sBACA,SAAC,EAAD,CAAgB1C,KAAMA,EAAMC,OAAQA,KACpC,SAAC,EAAD,KACA,SAAC,EAAA0C,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,SAIwB,IAA7BrC,OAAOC,KAAKR,GAAMS,SACjB,oEAIP,C,8ECrEKoC,EAAU,2CAEVZ,EAAW,mCAAG,WAAOa,GAAP,8FAAYC,EAAZ,+BAAyB,GAAIC,EAA7B,+BAA0C,CAAC,EAA3C,kBAESC,EAAAA,EAAAA,IAAA,UACpBH,EADoB,YACbD,GADa,OACHE,GACpBC,GAJc,cAEVE,EAFU,yBAMTA,EAAWlD,MANF,gCAQhBmD,QAAQC,MAAR,MARgB,yDAAH,sDAYjBnB,EAAYoB,UAAY,CACtBP,IAAKQ,IAAAA,OAAAA,WACLP,WAAYO,IAAAA,OACZN,WAAYM,IAAAA,QAGd,K","sources":["components/MovieDetails/ContainerMovie.jsx","webpack://react-homework-template/./src/components/Info/Info.module.css?d253","components/Info/Info.jsx","pages/MovieDetails.jsx","services/fetch.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\n\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst ContainerMovie = ({ data, genres }) => {\n  return (\n    <>\n      <div>\n        <div>\n          <img\n            src={`${IMG_URL}${data.poster_path}`}\n            alt=\"Poster Movie\"\n            width=\"200\"\n            height=\"300\"\n          />\n        </div>\n\n        <div>\n          <h1>\n            {Object.keys(data).length !== 0 &&\n              `${data.original_title} (${data.release_date.split('-', 1)})`}\n          </h1>\n          <div>User score: {Math.round(data.vote_average * 10)}%</div>\n          <div>\n            <p>Overview</p>\n            <span>{data && data.overview}</span>\n          </div>\n          <div>\n            <p>Genres</p>\n            {genres}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nContainerMovie.propTypes = {\n  data: PropTypes.object.isRequired,\n  genres: PropTypes.string.isRequired,\n};\n\nexport default ContainerMovie;\n","// extracted by mini-css-extract-plugin\nexport default {\"aditionalContainer\":\"Info_aditionalContainer__lTj1Q\",\"aditionalText\":\"Info_aditionalText__F5LdB\",\"aditionalLi\":\"Info_aditionalLi__iOjkU\",\"link\":\"Info_link__zG9qi\"};","import { Link } from 'react-router-dom';\nimport css from '../Info/Info.module.css';\n\nconst AdditionalInfo = () => {\n  return (\n    <div className={css.aditionalContainer}>\n      <p className={css.aditionalText}>Additional information</p>\n      <ul>\n        <li className={css.aditionalLi}>\n          <Link className={css.link} to=\"cast\">\n            Cast\n          </Link>\n        </li>\n        <li className={css.aditionalLi}>\n          <Link className={css.link} to=\"reviews\">\n            Reviews\n          </Link>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default AdditionalInfo;\n","import { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport fetchMovies from 'services/fetch';\n\nimport ContainerMovie from '../components/MovieDetails/ContainerMovie';\nimport AdditionalInfo from 'components/Info/Info';\n\nconst MovieDetails = () => {\n  const [data, setData] = useState({});\n  const [genres, setGenres] = useState('');\n  const { id } = useParams();\n\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  const URL = `https://api.themoviedb.org/3/movie/${id}`;\n\n  useEffect(() => {\n    // const controller = new AbortController();\n\n    async function fetchData() {\n      const currentMovie = await fetchMovies(\n        URL\n        // {\n        // signal: controller.signal,\n        // }\n      );\n\n      if (currentMovie === undefined) {\n        return;\n      }\n      setData(currentMovie);\n      setGenres(() => {\n        if (!currentMovie?.genres) {\n          return '';\n        }\n        const genresStr = currentMovie.genres.reduce((acum, genre) => {\n          return currentMovie.genres.indexOf(genre) ===\n            currentMovie.genres.length - 1\n            ? (acum = `${acum} ${genre.name}`)\n            : (acum = `${acum} ${genre.name},`);\n        }, '');\n        return genresStr;\n      });\n      // console.log(currentMovie);\n      return currentMovie;\n    }\n\n    fetchData();\n\n    return () => {\n      // controller.abort();\n    };\n  }, [URL]);\n\n  return (\n    <div>\n      {Object.keys(data).length > 0 && (\n        <>\n          <Link to={backLinkHref.current}>Go back</Link>\n          <ContainerMovie data={data} genres={genres} />\n          <AdditionalInfo />\n          <Suspense fallback={<div>Loading...</div>}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n      {Object.keys(data).length === 0 && (\n        <p>No data, maybe something went wrong...</p>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst API_KEY = 'api_key=7b264c573728240a6ab06336c75c925f';\n\nconst fetchMovies = async (url, properties = '', controller = {}) => {\n  try {\n    const dataMovies = await axios.get(\n      `${url}?${API_KEY}${properties}`,\n      controller\n    );\n    return dataMovies.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nfetchMovies.propTypes = {\n  url: PropTypes.string.isRequired,\n  properties: PropTypes.string,\n  controller: PropTypes.object,\n};\n\nexport default fetchMovies;\n"],"names":["data","genres","src","poster_path","alt","width","height","Object","keys","length","original_title","release_date","split","Math","round","vote_average","overview","className","css","to","useState","setData","setGenres","id","useParams","location","useLocation","backLinkHref","useRef","state","from","URL","useEffect","fetchMovies","undefined","currentMovie","reduce","acum","genre","indexOf","name","fetchData","current","Suspense","fallback","API_KEY","url","properties","controller","axios","dataMovies","console","error","propTypes","PropTypes"],"sourceRoot":""}