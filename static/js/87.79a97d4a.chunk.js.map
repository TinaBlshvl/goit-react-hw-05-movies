{"version":3,"file":"static/js/87.79a97d4a.chunk.js","mappings":"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","sources":["../node_modules/react-router-dom/dom.ts"],"sourcesContent":["import type {\n  FormEncType,\n  HTMLFormMethod,\n  RelativeRoutingType,\n} from \"@remix-run/router\";\nimport { stripBasename } from \"@remix-run/router\";\n\nexport const defaultMethod: HTMLFormMethod = \"get\";\nconst defaultEncType: FormEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams | null\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    for (let key of defaultSearchParams.keys()) {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    }\n  }\n\n  return searchParams;\n}\n\nexport interface SubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   */\n  action?: string;\n\n  /**\n   * The action URL used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n}\n\nexport function getFormSubmissionInfo(\n  target:\n    | HTMLFormElement\n    | HTMLButtonElement\n    | HTMLInputElement\n    | FormData\n    | URLSearchParams\n    | { [name: string]: string }\n    | null,\n  options: SubmitOptions,\n  basename: string\n): {\n  action: string | null;\n  method: string;\n  encType: string;\n  formData: FormData;\n} {\n  let method: string;\n  let action: string | null = null;\n  let encType: string;\n  let formData: FormData;\n\n  if (isFormElement(target)) {\n    let submissionTrigger: HTMLButtonElement | HTMLInputElement = (\n      options as any\n    ).submissionTrigger;\n\n    if (options.action) {\n      action = options.action;\n    } else {\n      // When grabbing the action from the element, it will have had the basename\n      // prefixed to ensure non-JS scenarios work, so strip it since we'll\n      // re-prefix in the router\n      let attr = target.getAttribute(\"action\");\n      action = attr ? stripBasename(attr, basename) : null;\n    }\n    method = options.method || target.getAttribute(\"method\") || defaultMethod;\n    encType =\n      options.encType || target.getAttribute(\"enctype\") || defaultEncType;\n\n    formData = new FormData(target);\n\n    if (submissionTrigger && submissionTrigger.name) {\n      formData.append(submissionTrigger.name, submissionTrigger.value);\n    }\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    if (options.action) {\n      action = options.action;\n    } else {\n      // When grabbing the action from the element, it will have had the basename\n      // prefixed to ensure non-JS scenarios work, so strip it since we'll\n      // re-prefix in the router\n      let attr =\n        target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n      action = attr ? stripBasename(attr, basename) : null;\n    }\n\n    method =\n      options.method ||\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    encType =\n      options.encType ||\n      target.getAttribute(\"formenctype\") ||\n      form.getAttribute(\"enctype\") ||\n      defaultEncType;\n\n    formData = new FormData(form);\n\n    // Include name + value from a <button>, appending in case the button name\n    // matches an existing input name\n    if (target.name) {\n      formData.append(target.name, target.value);\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = options.method || defaultMethod;\n    action = options.action || null;\n    encType = options.encType || defaultEncType;\n\n    if (target instanceof FormData) {\n      formData = target;\n    } else {\n      formData = new FormData();\n\n      if (target instanceof URLSearchParams) {\n        for (let [name, value] of target) {\n          formData.append(name, value);\n        }\n      } else if (target != null) {\n        for (let name of Object.keys(target)) {\n          formData.append(name, target[name]);\n        }\n      }\n    }\n  }\n\n  return { action, method: method.toLowerCase(), encType, formData };\n}\n"],"names":["window","hydrationData","parseHydrationData","mapRouteProperties","initialize","createHashHistory","state","_window","__staticRouterHydrationData","errors","deserializeErrors","entries","serialized","val","__type","ErrorResponse","status","statusText","data","Router","navigationType","navigator","HashRouter","_ref2","HistoryRouter","_ref3","process","displayName","isBrowser","document","protocol","path","nativeEvent","useLinkClickHandler","submitMethod","onSubmit","currentTarget","ScrollRestoration","defaultMethod","storageKey","useScrollRestoration","useDataRouterState","DataRouterHook","DataRouterStateHook","getDataRouterConsoleError","hookName","className","useDataRouterContext","ctx","DataRouterContext","to","object","_temp","replaceProp","navigate","useNavigate","Form","useCallback","shouldProcessLinkClick","createPath","useSearchParams","defaultInit","Error","defaultSearchParamsRef","hasSetSearchParamsRef","useMemo","getSearchParamsForLocation","setSearchParams","tagName","nextInit","parse","disableScrollRestoration","enableScrollRestoration","isInputElement","toLowerCase","isButtonElement","current","listen","v5Compat","useState","location","setState","useRef","useLayoutEffect","values","createFetcherForm","isModifiedEvent","navigateOptions","useSubmit","fetcherRouteId","router","currentRouteId","useRouteId","formEncType","fetch","fromRouteId","_temp2","routeContext","isPending","RouteContext","isFormElement","routeId","matches","slice","match","route","index","children","params","delete","toString","joinPaths","FetcherForm","fetcherId","useFetcher","scrollY","sessionStorage","el","getElementById","scrollIntoView","callback","forwardRef","ABSOLUTE_URL_REGEX","Link","LinkWithRef","ref","onClick","relative","filter","addEventListener","removeEventListener","usePrompt","_ref8"],"sourceRoot":""}