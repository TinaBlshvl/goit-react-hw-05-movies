{"version":3,"file":"static/js/671.e4d5ee7f.chunk.js","mappings":"4QAEaA,EAAwB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OAC7C,OACE,gCACE,0BACE,kBACEC,IAAG,yCAAoCF,EAAMG,aAC7CC,IAAI,cACJC,MAAM,MACNC,OAAO,WAIX,4BACE,wBACiC,IAA9BC,OAAOC,KAAKR,GAAOS,QAAnB,UACIT,EAAMU,eADV,aAC6BV,EAAMW,aAAaC,MAAM,IAAK,GAD3D,QAGH,0CAAkBC,KAAKC,MAA2B,GAArBd,EAAMe,cAAnC,QACA,4BACE,sCACA,0BAAOf,GAASA,EAAMgB,eAExB,4BACE,mCACCf,UAKV,EC7BYgB,EAAY,WACvB,OACE,4BACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMC,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,4BAKT,ECTYC,EAAe,WAAO,IAAD,IAChC,GAAwBC,EAAAA,EAAAA,UAAS,CAAC,GAAlC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOnB,EAAP,KAAesB,EAAf,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAEFE,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAE9CC,EAAG,6CAAyCR,GAwClD,OAtCAS,EAAAA,EAAAA,YAAU,WAAM,wCAGd,qGAC6BC,EAAAA,EAAAA,GACzBF,GAFJ,eAQuBG,KAPfC,EADR,gEAWEd,EAAQc,GACRb,GAAU,WACR,OAAI,OAACa,QAAD,IAACA,GAAAA,EAAcnC,OAGDmC,EAAanC,OAAOoC,QAAO,SAACC,EAAMC,GAClD,OAEKD,EAFEF,EAAanC,OAAOuC,QAAQD,KACjCH,EAAanC,OAAOQ,OAAS,EACtB,UAAM6B,EAAN,YAAcC,EAAME,MACpB,UAAMH,EAAN,YAAcC,EAAME,KAApB,IACV,GAAE,IAPM,EASV,IAvBH,kBAyBSL,GAzBT,4CAHc,sBAiCd,OAjCc,mCA+BdM,GAEO,WAEN,CACF,GAAE,CAACV,KAGF,2BACGzB,OAAOC,KAAKa,GAAMZ,OAAS,IAC1B,iCACE,SAAC,KAAD,CAAMS,GAAIU,EAAae,QAAvB,sBACA,SAAC5C,EAAD,CAAuBsB,KAAMA,EAAMpB,OAAQA,KAC3C,SAACgB,EAAD,KACA,SAAC,EAAA2B,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,SAIwB,IAA7BtC,OAAOC,KAAKa,GAAMZ,SAAgB,yDAGxC,C,8DCpEKqC,EAAM,2CAENZ,EAAK,mCAAG,WAAOa,GAAP,8FAAYC,EAAZ,+BAAyB,GAAIC,EAA7B,+BAA0C,CAAC,EAA3C,kBAEeC,EAAAA,EAAAA,IAAA,UACpBH,EADoB,YACbD,GADa,OACPE,GAChBC,GAJQ,cAEJE,EAFI,yBAMHA,EAAW9B,MANR,gCAQV+B,QAAQC,MAAR,MARU,yDAAH,sDAYX,K","sources":["components/MovieDetails/MovieDetails.jsx","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails.jsx","services/fetch.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\n\nexport const MovieDetailsContainer = ({ movie, genres }) => {\n  return (\n    <section>\n      <div>\n        <image\n          src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n          alt=\"Movie image\"\n          width=\"250\"\n          height=\"350\"\n        />\n      </div>\n\n      <div>\n        <h1>\n          {Object.keys(movie).length !== 0 &&\n            `${movie.original_title} (${movie.release_date.split('-', 1)})`}\n        </h1>\n        <div>User score: {Math.round(movie.vote_average * 10)}%</div>\n        <div>\n          <h2>Overview</h2>\n          <span>{movie && movie.overview}</span>\n        </div>\n        <div>\n          <h2>Genres</h2>\n          {genres}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nMovieDetailsContainer.propTypes = {\n  movie: PropTypes.object.isRequired,\n  genres: PropTypes.string.isRequired,\n};\n","import { Link } from 'react-router-dom';\n\nexport const MovieInfo = () => {\n  return (\n    <div>\n      <h1>Additional information</h1>\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n    </div>\n  );\n};\n","import { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport fetch from 'services/fetch';\n\nimport { MovieDetailsContainer } from 'components/MovieDetails/MovieDetails';\nimport { MovieInfo } from 'components/MovieInfo/MovieInfo';\n\nexport const MovieDetails = () => {\n  const [data, setData] = useState({});\n  const [genres, setGenres] = useState('');\n  const { id } = useParams();\n\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  const URL = `https://api.themoviedb.org/3/movie/${id}`;\n\n  useEffect(() => {\n    // const controller = new AbortController();\n\n    async function fetchData() {\n      const currentMovie = await fetch(\n        URL\n        // {\n        // signal: controller.signal,\n        // }\n      );\n\n      if (currentMovie === undefined) {\n        return;\n      }\n      setData(currentMovie);\n      setGenres(() => {\n        if (!currentMovie?.genres) {\n          return '';\n        }\n        const genresStr = currentMovie.genres.reduce((acum, genre) => {\n          return currentMovie.genres.indexOf(genre) ===\n            currentMovie.genres.length - 1\n            ? (acum = `${acum} ${genre.name}`)\n            : (acum = `${acum} ${genre.name},`);\n        }, '');\n        return genresStr;\n      });\n      // console.log(currentMovie);\n      return currentMovie;\n    }\n\n    fetchData();\n\n    return () => {\n      // controller.abort();\n    };\n  }, [URL]);\n\n  return (\n    <div>\n      {Object.keys(data).length > 0 && (\n        <>\n          <Link to={backLinkHref.current}>Go back</Link>\n          <MovieDetailsContainer data={data} genres={genres} />\n          <MovieInfo />\n          <Suspense fallback={<div>Loading...</div>}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n      {Object.keys(data).length === 0 && <p>Sorry, but we found nothing</p>}\n    </div>\n  );\n};\n","import axios from 'axios';\n\nconst KEY = 'api_key=7b264c573728240a6ab06336c75c925f';\n\nconst fetch = async (url, properties = '', controller = {}) => {\n  try {\n    const dataMovies = await axios.get(\n      `${url}?${KEY}${properties}`,\n      controller\n    );\n    return dataMovies.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport default fetch;\n"],"names":["MovieDetailsContainer","movie","genres","src","poster_path","alt","width","height","Object","keys","length","original_title","release_date","split","Math","round","vote_average","overview","MovieInfo","to","MovieDetails","useState","data","setData","setGenres","id","useParams","location","useLocation","backLinkHref","useRef","state","from","URL","useEffect","fetch","undefined","currentMovie","reduce","acum","genre","indexOf","name","fetchData","current","Suspense","fallback","KEY","url","properties","controller","axios","dataMovies","console","error"],"sourceRoot":""}