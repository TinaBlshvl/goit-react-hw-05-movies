{"version":3,"file":"static/js/306.6e12c6f2.chunk.js","mappings":"kOAEaA,EAAc,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAQlC,OACE,0BACE,kBAAMC,OAAO,GAAGC,SATD,SAAAC,GACjBA,EAAEC,iBAEF,IAAMJ,EAAQG,EAAEE,cAAcC,SAASC,WAAWP,MAClDD,EAAKC,EACN,EAIG,WACE,kBAAOQ,WAAS,EAACC,KAAK,OAAOC,KAAK,aAAaC,aAAcX,KAC7D,mBAAQS,KAAK,SAAb,wBAIP,E,mCCZYG,EAAQ,WAAO,IAAD,EACzB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAS,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAEzCC,GAAWC,EAAAA,EAAAA,MAEXC,EAAM,6CAEZC,EAAAA,EAAAA,YAAU,WAAM,wCACd,uFACoB,KAAdL,EADN,kEAI6BM,EAAAA,EAAAA,GAAM,GAAD,OAAIF,GAAJ,iBAAqBJ,IAAaO,MAChE,SAAAC,GAAG,OAAIA,EAAIC,OAAR,IALP,cAIQC,EAJR,OAQEd,GAAU,kBACRc,EAAaC,KAAI,kBAAoB,CACnCC,GADe,EAAGA,GAElBC,MAFe,EAAOA,MAAP,GADT,IARZ,kBAcSH,GAdT,4CADc,uBAAC,WAAD,wBAkBdI,EACD,GAAE,CAACd,IAQJ,OACE,iCACE,SAACrB,EAAD,CAAaoC,UARO,SAAAC,GAElBjB,EADU,KAAdiB,EACoB,CAAEC,MAAOD,GACT,CAAC,EACtB,EAI4CnC,MAAOmB,KAChD,0BACE,wBACGL,EAAOgB,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACjB,OACE,yBACE,SAAC,KAAD,CAAMK,GAAE,iBAAYN,GAAMO,MAAO,CAAEC,KAAMlB,GAAzC,SACGW,KAFID,EAMZ,UAKV,C,8DC1DKS,EAAM,2CAENf,EAAK,mCAAG,WAAOgB,GAAP,8FAAYC,EAAZ,+BAAyB,GAAIC,EAA7B,+BAA0C,CAAC,EAA3C,kBAEeC,EAAAA,EAAAA,IAAA,UACpBH,EADoB,YACbD,GADa,OACPE,GAChBC,GAJQ,cAEJE,EAFI,yBAMHA,EAAWC,MANR,gCAQVC,QAAQC,MAAR,MARU,yDAAH,sDAYX,K","sources":["components/MovieSearch/MovieSearch.jsx","pages/Movie.jsx","services/fetch.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\n\nexport const MovieSearch = ({ form, value }) => {\n  const formSubmit = e => {\n    e.preventDefault();\n\n    const value = e.currentTarget.elements.name_movie.value;\n    form(value);\n  };\n\n  return (\n    <div>\n      <form action=\"\" onSubmit={formSubmit}>\n        <input autoFocus type=\"text\" name=\"name_movie\" defaultValue={value} />\n        <button type=\"submit\">Search</button>\n      </form>\n    </div>\n  );\n};\n\nMovieSearch.propTypes = {\n  form: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n","import { MovieSearch } from 'components/MovieSearch/MovieSearch';\nimport fetch from 'services/fetch';\n\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nexport const Movie = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') ?? '';\n\n  const location = useLocation();\n\n  const URL = 'https://api.themoviedb.org/3/search/movie';\n\n  useEffect(() => {\n    async function fetchData() {\n      if (movieName === '') {\n        return;\n      }\n      const currentMovie = await fetch(`${URL}`, `&query=${movieName}`).then(\n        res => res.results\n      );\n      // console.log(currentMovie);\n      setMovies(() =>\n        currentMovie.map(({ id, title }) => ({\n          id,\n          title,\n        }))\n      );\n      return currentMovie;\n    }\n\n    fetchData();\n  }, [movieName]);\n\n  const submitFormValue = valueForm => {\n    valueForm !== ''\n      ? setSearchParams({ query: valueForm })\n      : setSearchParams({});\n  };\n\n  return (\n    <>\n      <MovieSearch formValue={submitFormValue} value={movieName} />\n      <div>\n        <ul>\n          {movies.map(({ id, title }) => {\n            return (\n              <li key={id}>\n                <Link to={`/movie/${id}`} state={{ from: location }}>\n                  {title}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </>\n  );\n};\n","import axios from 'axios';\n\nconst KEY = 'api_key=7b264c573728240a6ab06336c75c925f';\n\nconst fetch = async (url, properties = '', controller = {}) => {\n  try {\n    const dataMovies = await axios.get(\n      `${url}?${KEY}${properties}`,\n      controller\n    );\n    return dataMovies.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport default fetch;\n"],"names":["MovieSearch","form","value","action","onSubmit","e","preventDefault","currentTarget","elements","name_movie","autoFocus","type","name","defaultValue","Movie","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","movieName","get","location","useLocation","URL","useEffect","fetch","then","res","results","currentMovie","map","id","title","fetchData","formValue","valueForm","query","to","state","from","KEY","url","properties","controller","axios","dataMovies","data","console","error"],"sourceRoot":""}